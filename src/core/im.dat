// Programa: cuenta de 15 a 0 usando instrucciones del control_unit.
// Formato por línea: 15 bits -> [opcode(7)][literal/addr(8)]
// Direcciones de instrucción (PC) empiezan en 0.

// Inst 0: MOV A, 15      ; carga 15 en A
000001000001111

// Inst 1 (Loop): MOV B, 0   ; cargar 0 en B para hacer CMP A,B contra 0
000001100000000

// Inst 2: CMP A, B        ; compara A con B -> actualizar flags
100110100000000

// Inst 3: JEQ End         ; si A == 0 saltar a End (addr 6)
101010000000110

// Inst 4: SUB A, 1        ; A = A - 1
000101000000001

// Inst 5: JMP Loop        ; saltar a Loop (addr 1)
101001100000001

// Inst 6 (End): MOV A, 0  ; opcional: dejar A en 0 (cuando llegue aquí A==0)
000001000000000

// Resto: NOPs (llenar con ceros)
000000000000000
000000000000000
000000000000000
